tosca_definitions_version: tosca_simple_yaml_1_3

# This template was auto-generated by swagger2tosca

namespace: io.k8s.kube-aggregator.pkg.apis.apiregistration

metadata:
  title: Kubernetes
  version: unversioned

imports:
  - file: io.k8s.apimachinery.pkg.apis.meta
    namespace_prefix: meta

node_types:

  APIService:
    description: >-
      APIService represents a server for a particular GroupVersion. Name
      must be "version.group".
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: apiregistration.k8s.io
        kind: APIService
        version: v1
    properties:
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          Standard object's metadata. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#metadata
        required: false
        type: meta:ObjectMeta
      spec:
        description: Spec contains information for locating and communicating with a server
        required: false
        type: APIServiceSpec
      status:
        description: Status contains derived information about an API server
        required: false
        type: APIServiceStatus

data_types:

  APIServiceCondition:
    description: >-
      APIServiceCondition describes the state of an APIService at a
      particular point
    properties:
      lastTransitionTime:
        description: Last time the condition transitioned from one status to another.
        required: false
        type: meta:Time
      message:
        description: Human-readable message indicating details about last transition.
        required: false
        type: string
      reason:
        description: >-
          Unique, one-word, CamelCase reason for the condition's last
          transition.
        required: false
        type: string
      status:
        description: Status is the status of the condition. Can be True, False, Unknown.
        required: true
        type: string
      type:
        description: Type is the type of the condition.
        required: true
        type: string

  APIServiceStatus:
    description: APIServiceStatus contains derived information about an API server
    properties:
      conditions:
        description: Current service state of apiService.
        required: false
        type: list
        entry_schema:
          type: APIServiceCondition
        metadata:
          x-kubernetes-list-map-keys: ['type']
          x-kubernetes-list-type: map

  ServiceReference:
    description: ServiceReference holds a reference to Service.legacy.k8s.io
    properties:
      name:
        description: Name is the name of the service
        required: false
        type: string
      namespace:
        description: Namespace is the namespace of the service
        required: false
        type: string
      port:
        description: >-
          If specified, the port on the service that hosting webhook. Default to
          443 for backward compatibility. `port` should be a valid port number
          (1-65535, inclusive).
        required: false
        type: integer
        constraints:
          - in_range: [-2147483648, 2147483647]

  APIServiceSpec:
    description: >-
      APIServiceSpec contains information for locating and communicating
      with a server. Only https is supported, though you are able to disable
      certificate verification.
    properties:
      caBundle:
        description: >-
          CABundle is a PEM encoded CA bundle which will be used to validate an
          API server's serving certificate. If unspecified, system trust roots
          on the apiserver are used.
        required: false
        type: string
      group:
        description: Group is the API group name this server hosts
        required: false
        type: string
      groupPriorityMinimum:
        description: >-
          GroupPriorityMininum is the priority this group should have at least.
          Higher priority means that the group is preferred by clients over
          lower priority ones. Note that other versions of this group might
          specify even higher GroupPriorityMininum values such that the whole
          group gets a higher priority. The primary sort is based on
          GroupPriorityMinimum, ordered highest number to lowest (20 before 10).
          The secondary sort is based on the alphabetical comparison of the name
          of the object.  (v1.bar before v1.foo) We'd recommend something like:
          *.k8s.io (except extensions) at 18000 and PaaSes (OpenShift, Deis) are
          recommended to be in the 2000s
        required: true
        type: integer
        constraints:
          - in_range: [-2147483648, 2147483647]
      insecureSkipTLSVerify:
        description: >-
          InsecureSkipTLSVerify disables TLS certificate verification when
          communicating with this server. This is strongly discouraged.  You
          should use the CABundle instead.
        required: false
        type: boolean
      service:
        description: >-
          Service is a reference to the service for this API server.  It must
          communicate on port 443. If the Service is nil, that means the
          handling for the API groupversion is handled locally on this server.
          The call will simply delegate to the normal handler chain to be
          fulfilled.
        required: false
        type: ServiceReference
      version:
        description: Version is the API version this server hosts.  For example, "v1"
        required: false
        type: string
      versionPriority:
        description: >-
          VersionPriority controls the ordering of this API version inside of
          its group.  Must be greater than zero. The primary sort is based on
          VersionPriority, ordered highest to lowest (20 before 10). Since it's
          inside of a group, the number can be small, probably in the 10s. In
          case of equal version priorities, the version string will be used to
          compute the order inside a group. If the version string is "kube-
          like", it will sort above non "kube-like" version strings, which are
          ordered lexicographically. "Kube-like" versions start with a "v", then
          are followed by a number (the major version), then optionally the
          string "alpha" or "beta" and another number (the minor version). These
          are sorted first by GA > beta > alpha (where GA is a version with no
          suffix such as beta or alpha), and then by comparing major version,
          then minor version. An example sorted list of versions: v10, v2, v1,
          v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
        required: true
        type: integer
        constraints:
          - in_range: [-2147483648, 2147483647]

