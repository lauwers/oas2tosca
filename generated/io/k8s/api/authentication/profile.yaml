tosca_definitions_version: tosca_simple_yaml_1_3

# This template was auto-generated by swagger2tosca

namespace: io.k8s.api.authentication

metadata:
  title: Kubernetes
  version: unversioned

imports:
  - file: io.k8s.apimachinery.pkg.apis.meta
    namespace_prefix: meta

node_types:

  TokenRequest:
    description: TokenRequest requests a token for a given service account.
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: authentication.k8s.io
        kind: TokenRequest
        version: v1
    properties:
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          Standard object's metadata. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#metadata
        required: false
        type: meta:ObjectMeta
      spec:
        description: Spec holds information about the request being evaluated
        required: true
        type: TokenRequestSpec
      status:
        description: >-
          Status is filled in by the server and indicates whether the token can
          be authenticated.
        required: false
        type: TokenRequestStatus

  TokenReview:
    description: >-
      TokenReview attempts to authenticate a token to a known user. Note:
      TokenReview requests may be cached by the webhook token authenticator
      plugin in the kube-apiserver.
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: authentication.k8s.io
        kind: TokenReview
        version: v1
    properties:
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          Standard object's metadata. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#metadata
        required: false
        type: meta:ObjectMeta
      spec:
        description: Spec holds information about the request being evaluated
        required: true
        type: TokenReviewSpec
      status:
        description: >-
          Status is filled in by the server and indicates whether the request
          can be authenticated.
        required: false
        type: TokenReviewStatus

data_types:

  TokenReviewSpec:
    description: TokenReviewSpec is a description of the token authentication request.
    properties:
      audiences:
        description: >-
          Audiences is a list of the identifiers that the resource server
          presented with the token identifies as. Audience-aware token
          authenticators will verify that the token was intended for at least
          one of the audiences in this list. If no audiences are provided, the
          audience will default to the audience of the Kubernetes apiserver.
        required: false
        type: list
        entry_schema:
          type: string
      token:
        description: Token is the opaque bearer token.
        required: false
        type: string

  TokenRequestStatus:
    description: TokenRequestStatus is the result of a token request.
    properties:
      expirationTimestamp:
        description: ExpirationTimestamp is the time of expiration of the returned token.
        required: true
        type: meta:Time
      token:
        description: Token is the opaque bearer token.
        required: true
        type: string

  BoundObjectReference:
    description: >-
      BoundObjectReference is a reference to an object that a token is bound
      to.
    properties:
      apiVersion:
        description: API version of the referent.
        required: false
        type: string
      kind:
        description: >-
          Kind of the referent. Valid kinds are 'Pod' and 'Secret'.
        required: false
        type: string
      name:
        description: Name of the referent.
        required: false
        type: string
      uid:
        description: UID of the referent.
        required: false
        type: string

  TokenRequestSpec:
    description: >-
      TokenRequestSpec contains client provided parameters of a token
      request.
    properties:
      audiences:
        description: >-
          Audiences are the intendend audiences of the token. A recipient of a
          token must identitfy themself with an identifier in the list of
          audiences of the token, and otherwise should reject the token. A token
          issued for multiple audiences may be used to authenticate against any
          of the audiences listed but implies a high degree of trust between the
          target audiences.
        required: true
        type: list
        entry_schema:
          type: string
      boundObjectRef:
        description: >-
          BoundObjectRef is a reference to an object that the token will be
          bound to. The token will only be valid for as long as the bound object
          exists. NOTE: The API server's TokenReview endpoint will validate the
          BoundObjectRef, but other audiences may not. Keep ExpirationSeconds
          small if you want prompt revocation.
        required: false
        type: BoundObjectReference
      expirationSeconds:
        description: >-
          ExpirationSeconds is the requested duration of validity of the
          request. The token issuer may return a token with a different validity
          duration so a client needs to check the 'expiration' field in a
          response.
        required: false
        type: integer
        constraints:
          - in_range: [-9223372036854775808, 9223372036854775807]

  UserInfo:
    description: >-
      UserInfo holds the information about the user needed to implement the
      user.Info interface.
    properties:
      extra:
        description: Any additional information provided by the authenticator.
        required: false
        type: map
        entry_schema:
          type: list
          entry_schema:
            type: string
      groups:
        description: The names of groups this user is a part of.
        required: false
        type: list
        entry_schema:
          type: string
      uid:
        description: >-
          A unique value that identifies this user across time. If this user is
          deleted and another user by the same name is added, they will have
          different UIDs.
        required: false
        type: string
      username:
        description: The name that uniquely identifies this user among all active users.
        required: false
        type: string

  TokenReviewStatus:
    description: TokenReviewStatus is the result of the token authentication request.
    properties:
      audiences:
        description: >-
          Audiences are audience identifiers chosen by the authenticator that
          are compatible with both the TokenReview and token. An identifier is
          any identifier in the intersection of the TokenReviewSpec audiences
          and the token's audiences. A client of the TokenReview API that sets
          the spec.audiences field should validate that a compatible audience
          identifier is returned in the status.audiences field to ensure that
          the TokenReview server is audience aware. If a TokenReview returns an
          empty status.audience field where status.authenticated is "true", the
          token is valid against the audience of the Kubernetes API server.
        required: false
        type: list
        entry_schema:
          type: string
      authenticated:
        description: >-
          Authenticated indicates that the token was associated with a known
          user.
        required: false
        type: boolean
      error:
        description: >-
          Error indicates that the token couldn't be checked
        required: false
        type: string
      user:
        description: User is the UserInfo associated with the provided token.
        required: false
        type: UserInfo

