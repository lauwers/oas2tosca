tosca_definitions_version: tosca_simple_yaml_1_3

# This template was auto-generated by swagger2tosca

namespace: io.k8s.api.discovery

metadata:
  title: Kubernetes
  version: unversioned

imports:
  - file: io.k8s.api.core
    namespace_prefix: core
  - file: io.k8s.apimachinery.pkg.apis.meta
    namespace_prefix: meta

node_types:

  EndpointSlice:
    description: >-
      EndpointSlice represents a subset of the endpoints that implement a
      service. For a given service there may be multiple EndpointSlice
      objects, selected by labels, which must be joined to produce the full
      set of endpoints.
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: discovery.k8s.io
        kind: EndpointSlice
        version: v1
    properties:
      addressType:
        description: >-
          addressType specifies the type of address carried by this
          EndpointSlice. All addresses in this slice must be the same type. This
          field is immutable after creation. The following address types are
          currently supported: * IPv4: Represents an IPv4 Address. * IPv6:
          Represents an IPv6 Address. * FQDN: Represents a Fully Qualified
          Domain Name.
        required: true
        type: string
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      endpoints:
        description: >-
          endpoints is a list of unique endpoints in this slice. Each slice may
          include a maximum of 1000 endpoints.
        required: true
        type: list
        entry_schema:
          type: Endpoint
        metadata:
          x-kubernetes-list-type: atomic
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          Standard object's metadata.
        required: false
        type: meta:ObjectMeta
      ports:
        description: >-
          ports specifies the list of network ports exposed by each endpoint in
          this slice. Each port must have a unique name. When ports is empty, it
          indicates that there are no defined ports. When a port is defined with
          a nil port value, it indicates "all ports". Each slice may include a
          maximum of 100 ports.
        required: false
        type: list
        entry_schema:
          type: EndpointPort
        metadata:
          x-kubernetes-list-type: atomic

data_types:

  EndpointConditions:
    description: EndpointConditions represents the current condition of an endpoint.
    properties:
      ready:
        description: >-
          ready indicates that this endpoint is prepared to receive traffic,
          according to whatever system is managing the endpoint. A nil value
          indicates an unknown state. In most cases consumers should interpret
          this unknown state as ready. For compatibility reasons, ready should
          never be "true" for terminating endpoints.
        required: false
        type: boolean
      serving:
        description: >-
          serving is identical to ready except that it is set regardless of the
          terminating state of endpoints. This condition should be set to true
          for a ready endpoint that is terminating. If nil, consumers should
          defer to the ready condition. This field can be enabled with the
          EndpointSliceTerminatingCondition feature gate.
        required: false
        type: boolean
      terminating:
        description: >-
          terminating indicates that this endpoint is terminating. A nil value
          indicates an unknown state. Consumers should interpret this unknown
          state to mean that the endpoint is not terminating. This field can be
          enabled with the EndpointSliceTerminatingCondition feature gate.
        required: false
        type: boolean

  ForZone:
    description: >-
      ForZone provides information about which zones should consume this
      endpoint.
    properties:
      name:
        description: name represents the name of the zone.
        required: true
        type: string

  EndpointHints:
    description: >-
      EndpointHints provides hints describing how an endpoint should be
      consumed.
    properties:
      forZones:
        description: >-
          forZones indicates the zone(s) this endpoint should be consumed by to
          enable topology aware routing.
        required: false
        type: list
        entry_schema:
          type: ForZone
        metadata:
          x-kubernetes-list-type: atomic

  Endpoint:
    description: Endpoint represents a single logical "backend" implementing a service.
    properties:
      addresses:
        description: >-
          addresses of this endpoint. The contents of this field are interpreted
          according to the corresponding EndpointSlice addressType field.
          Consumers must handle different types of addresses in the context of
          their own capabilities. This must contain at least one address but no
          more than 100.
        required: true
        type: list
        entry_schema:
          type: string
        metadata:
          x-kubernetes-list-type: set
      conditions:
        description: >-
          conditions contains information about the current status of the
          endpoint.
        required: false
        type: EndpointConditions
      deprecatedTopology:
        description: >-
          deprecatedTopology contains topology information part of the v1beta1
          API. This field is deprecated, and will be removed when the v1beta1
          API is removed (no sooner than kubernetes v1.24).  While this field
          can hold values, it is not writable through the v1 API, and any
          attempts to write to it will be silently ignored. Topology information
          can be found in the zone and nodeName fields instead.
        required: false
        type: map
        entry_schema:
          type: string
      hints:
        description: >-
          hints contains information associated with how an endpoint should be
          consumed.
        required: false
        type: EndpointHints
      hostname:
        description: >-
          hostname of this endpoint. This field may be used by consumers of
          endpoints to distinguish endpoints from each other (e.g. in DNS
          names). Multiple endpoints which use the same hostname should be
          considered fungible (e.g. multiple A values in DNS). Must be lowercase
          and pass DNS Label (RFC 1123) validation.
        required: false
        type: string
      nodeName:
        description: >-
          nodeName represents the name of the Node hosting this endpoint. This
          can be used to determine endpoints local to a Node. This field can be
          enabled with the EndpointSliceNodeName feature gate.
        required: false
        type: string
      targetRef:
        description: >-
          targetRef is a reference to a Kubernetes object that represents this
          endpoint.
        required: false
        type: core:ObjectReference
      zone:
        description: zone is the name of the Zone this endpoint exists in.
        required: false
        type: string

  EndpointPort:
    description: EndpointPort represents a Port used by an EndpointSlice
    properties:
      appProtocol:
        description: >-
          The application protocol for this port. This field follows standard
          Kubernetes label syntax. Un-prefixed names are reserved for IANA
          standard service names (as per RFC-6335 and
          http://www.iana.org/assignments/service-names). Non-standard protocols
          should use prefixed names such as mycompany.com/my-custom-protocol.
        required: false
        type: string
      name:
        description: >-
          The name of this port. All ports in an EndpointSlice must have a
          unique name. If the EndpointSlice is dervied from a Kubernetes
          service, this corresponds to the Service.ports[].name. Name must
          either be an empty string or pass DNS_LABEL validation: * must be no
          more than 63 characters long. * must consist of lower case
          alphanumeric characters or '-'. * must start and end with an
          alphanumeric character. Default is empty string.
        required: false
        type: string
      port:
        description: >-
          The port number of the endpoint. If this is not specified, ports are
          not restricted and must be interpreted in the context of the specific
          consumer.
        required: false
        type: integer
        constraints:
          - in_range: [-2147483648, 2147483647]
      protocol:
        description: >-
          The IP protocol for this port. Must be UDP, TCP, or SCTP. Default is
          TCP.
        required: false
        type: string

