tosca_definitions_version: tosca_simple_yaml_1_3

# This template was auto-generated by swagger2tosca

namespace: io.k8s.api.node

metadata:
  title: Kubernetes
  version: unversioned

imports:
  - file: io.k8s.apimachinery.pkg.api.resource
    namespace_prefix: resource
  - file: io.k8s.apimachinery.pkg.apis.meta
    namespace_prefix: meta
  - file: io.k8s.api.core
    namespace_prefix: core

node_types:

  RuntimeClass:
    description: >-
      RuntimeClass defines a class of container runtime supported in the
      cluster. The RuntimeClass is used to determine which container runtime
      is used to run all containers in a pod. RuntimeClasses are manually
      defined by a user or cluster provisioner, and referenced in the
      PodSpec. The Kubelet is responsible for resolving the RuntimeClassName
      reference before running the pod.  For more details, see
      https://kubernetes.io/docs/concepts/containers/runtime-class/
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: node.k8s.io
        kind: RuntimeClass
        version: v1
    properties:
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      handler:
        description: >-
          Handler specifies the underlying runtime and configuration that the
          CRI implementation will use to handle pods of this class. The possible
          values are specific to the node & CRI configuration.  It is assumed
          that all handlers are available on every node, and handlers of the
          same name are equivalent on every node. For example, a handler called
          "runc" might specify that the runc OCI runtime (using native Linux
          containers) will be used to run the containers in a pod. The Handler
          must be lowercase, conform to the DNS Label (RFC 1123) requirements,
          and is immutable.
        required: true
        type: string
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          More info: https://git.k8s.io/community/contributors/devel/sig-
          architecture/api-conventions.md#metadata
        required: false
        type: meta:ObjectMeta
      overhead:
        description: >-
          Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. For more details, see
          https://kubernetes.io/docs/concepts/scheduling-eviction/pod-overhead/
          This field is in beta starting v1.18 and is only honored by servers that enable the PodOverhead feature.
        required: false
        type: Overhead
      scheduling:
        description: >-
          Scheduling holds the scheduling constraints to ensure that pods
          running with this RuntimeClass are scheduled to nodes that support it.
          If scheduling is nil, this RuntimeClass is assumed to be supported by
          all nodes.
        required: false
        type: Scheduling

data_types:

  Overhead:
    description: >-
      Overhead structure represents the resource overhead associated with
      running a pod.
    properties:
      podFixed:
        description: >-
          PodFixed represents the fixed resource overhead associated with
          running a pod.
        required: false
        type: map
        entry_schema:
          type: resource:Quantity

  Scheduling:
    description: >-
      Scheduling specifies the scheduling constraints for nodes supporting a
      RuntimeClass.
    properties:
      nodeSelector:
        description: >-
          nodeSelector lists labels that must be present on nodes that support
          this RuntimeClass. Pods using this RuntimeClass can only be scheduled
          to a node matched by this selector. The RuntimeClass nodeSelector is
          merged with a pod's existing nodeSelector. Any conflicts will cause
          the pod to be rejected in admission.
        required: false
        type: map
        entry_schema:
          type: string
      tolerations:
        description: >-
          tolerations are appended (excluding duplicates) to pods running with
          this RuntimeClass during admission, effectively unioning the set of
          nodes tolerated by the pod and the RuntimeClass.
        required: false
        type: list
        entry_schema:
          type: core:Toleration
        metadata:
          x-kubernetes-list-type: atomic

