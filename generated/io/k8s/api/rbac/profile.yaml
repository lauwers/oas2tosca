tosca_definitions_version: tosca_simple_yaml_1_3

# This template was auto-generated by swagger2tosca

namespace: io.k8s.api.rbac

metadata:
  title: Kubernetes
  version: unversioned

imports:
  - file: io.k8s.apimachinery.pkg.apis.meta
    namespace_prefix: meta

node_types:

  ClusterRoleBinding:
    description: >-
      ClusterRoleBinding references a ClusterRole, but not contain it.  It
      can reference a ClusterRole in the global namespace, and adds who
      information via Subject.
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: rbac.authorization.k8s.io
        kind: ClusterRoleBinding
        version: v1
    properties:
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          Standard object's metadata.
        required: false
        type: meta:ObjectMeta
      roleRef:
        description: >-
          RoleRef can only reference a ClusterRole in the global namespace. If
          the RoleRef cannot be resolved, the Authorizer must return an error.
        required: true
        type: RoleRef
      subjects:
        description: Subjects holds references to the objects the role applies to.
        required: false
        type: list
        entry_schema:
          type: Subject

  ClusterRole:
    description: >-
      ClusterRole is a cluster level, logical grouping of PolicyRules that
      can be referenced as a unit by a RoleBinding or ClusterRoleBinding.
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: rbac.authorization.k8s.io
        kind: ClusterRole
        version: v1
    properties:
      aggregationRule:
        description: >-
          AggregationRule is an optional field that describes how to build the
          Rules for this ClusterRole. If AggregationRule is set, then the Rules
          are controller managed and direct changes to Rules will be stomped by
          the controller.
        required: false
        type: AggregationRule
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          Standard object's metadata.
        required: false
        type: meta:ObjectMeta
      rules:
        description: Rules holds all the PolicyRules for this ClusterRole
        required: false
        type: list
        entry_schema:
          type: PolicyRule

  RoleBinding:
    description: >-
      RoleBinding references a role, but does not contain it.  It can
      reference a Role in the same namespace or a ClusterRole in the global
      namespace. It adds who information via Subjects and namespace
      information by which namespace it exists in.  RoleBindings in a given
      namespace only have effect in that namespace.
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: rbac.authorization.k8s.io
        kind: RoleBinding
        version: v1
    properties:
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          Standard object's metadata.
        required: false
        type: meta:ObjectMeta
      roleRef:
        description: >-
          RoleRef can reference a Role in the current namespace or a ClusterRole
          in the global namespace. If the RoleRef cannot be resolved, the
          Authorizer must return an error.
        required: true
        type: RoleRef
      subjects:
        description: Subjects holds references to the objects the role applies to.
        required: false
        type: list
        entry_schema:
          type: Subject

  Role:
    description: >-
      Role is a namespaced, logical grouping of PolicyRules that can be
      referenced as a unit by a RoleBinding.
    derived_from: tosca.nodes.Root
    metadata:
      x-kubernetes-group-version-kind:
        group: rbac.authorization.k8s.io
        kind: Role
        version: v1
    properties:
      apiVersion:
        description: >-
          APIVersion defines the versioned schema of this representation of an
          object. Servers should convert recognized schemas to the latest
          internal value, and may reject unrecognized values. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#resources
        required: false
        type: string
      kind:
        description: >-
          Kind is a string value representing the REST resource this object
          represents. Servers may infer this from the endpoint the client
          submits requests to. Cannot be updated. In CamelCase. More info:
          https://git.k8s.io/community/contributors/devel/sig-architecture/api-
          conventions.md#types-kinds
        required: false
        type: string
      metadata:
        description: >-
          Standard object's metadata.
        required: false
        type: meta:ObjectMeta
      rules:
        description: Rules holds all the PolicyRules for this Role
        required: false
        type: list
        entry_schema:
          type: PolicyRule

data_types:

  RoleRef:
    description: RoleRef contains information that points to the role being used
    properties:
      apiGroup:
        description: APIGroup is the group for the resource being referenced
        required: true
        type: string
      kind:
        description: Kind is the type of resource being referenced
        required: true
        type: string
      name:
        description: Name is the name of resource being referenced
        required: true
        type: string

  PolicyRule:
    description: >-
      PolicyRule holds information that describes a policy rule, but does
      not contain information about who the rule applies to or which
      namespace the rule applies to.
    properties:
      apiGroups:
        description: >-
          APIGroups is the name of the APIGroup that contains the resources.  If
          multiple API groups are specified, any action requested against one of
          the enumerated resources in any API group will be allowed.
        required: false
        type: list
        entry_schema:
          type: string
      nonResourceURLs:
        description: >-
          NonResourceURLs is a set of partial urls that a user should have
          access to.  *s are allowed, but only as the full, final step in the
          path Since non-resource URLs are not namespaced, this field is only
          applicable for ClusterRoles referenced from a ClusterRoleBinding.
          Rules can either apply to API resources (such as "pods" or "secrets")
          or non-resource URL paths (such as "/api"),  but not both.
        required: false
        type: list
        entry_schema:
          type: string
      resourceNames:
        description: >-
          ResourceNames is an optional white list of names that the rule applies
          to.  An empty set means that everything is allowed.
        required: false
        type: list
        entry_schema:
          type: string
      resources:
        description: >-
          Resources is a list of resources this rule applies to. '*' represents
          all resources.
        required: false
        type: list
        entry_schema:
          type: string
      verbs:
        description: >-
          Verbs is a list of Verbs that apply to ALL the ResourceKinds contained
          in this rule. '*' represents all verbs.
        required: true
        type: list
        entry_schema:
          type: string

  AggregationRule:
    description: >-
      AggregationRule describes how to locate ClusterRoles to aggregate into
      the ClusterRole
    properties:
      clusterRoleSelectors:
        description: >-
          ClusterRoleSelectors holds a list of selectors which will be used to
          find ClusterRoles and create the rules. If any of the selectors match,
          then the ClusterRole's permissions will be added
        required: false
        type: list
        entry_schema:
          type: meta:LabelSelector

  Subject:
    description: >-
      Subject contains a reference to the object or user identities a role
      binding applies to.  This can either hold a direct API object
      reference, or a value for non-objects such as user and group names.
    properties:
      apiGroup:
        description: >-
          APIGroup holds the API group of the referenced subject. Defaults to ""
          for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io"
          for User and Group subjects.
        required: false
        type: string
      kind:
        description: >-
          Kind of object being referenced. Values defined by this API group are
          "User", "Group", and "ServiceAccount". If the Authorizer does not
          recognized the kind value, the Authorizer should report an error.
        required: true
        type: string
      name:
        description: Name of the object being referenced.
        required: true
        type: string
      namespace:
        description: >-
          Namespace of the referenced object.  If the object kind is non-
          namespace, such as "User" or "Group", and this value is not empty the
          Authorizer should report an error.
        required: false
        type: string

